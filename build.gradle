import groovy.swing.SwingBuilder

plugins {
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'checkstyle'
}

group 'org.zalando'
version '1.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    api group: 'io.opentracing', name: 'opentracing-api', version: '0.33.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: '1.11.464'
    implementation group: 'software.amazon.awssdk', name: 'sqs', version: '2.1.3'

    testImplementation group: 'io.opentracing', name: 'opentracing-mock', version: '0.33.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

checkstyle {
    configFile = new File(rootDir, "checkstyle.xml")
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

check.dependsOn jacocoTestReport

signing {
    useGpgCmd()
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf { project.hasProperty('signing.gnupg.keyName') }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        allprojects {
            if (gradle.taskGraph.hasTask("uploadArchives")) {
                def pass = ''
                new SwingBuilder().edt {
                    dialog(modal: true,
                            title: 'Enter password',
                            alwaysOnTop: true,
                            resizable: false,
                            locationRelativeTo: null, // Place dialog in center of the screen
                            pack: true,
                            show: true
                    ) {
                        vbox {
                            label(text: "Please enter key passphrase:")
                            input = passwordField()
                            button(defaultButton: true, text: 'OK', actionPerformed: {
                                pass = input.password
                                dispose()
                            })
                        }
                    }
                }
                ext."signing.password" = new String(pass)
            }
        }
    }
}

publishing { // for local publishing
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                if (project.hasProperty("sonatypeUsername")) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            }

            pom.project {
                name 'opentracing-sqs'
                packaging 'jar'
                description 'opentracing-sqs is a utility library for transmitting the OpenTracing span context over SQS.'
                url 'http://github.com/zalando-incubator/opentracing-sqs-java/'
                inceptionYear 2018
                organization {
                    name 'Zalando SE'
                    url 'https://tech.zalando.com/'
                }

                scm {
                    url 'scm:git@github.com:zalando-incubator/opentracing-sqs-java.git'
                    connection 'scm:git@github.com:zalando-incubator/opentracing-sqs-java.git'
                    developerConnection 'scm:git@github.com:zalando-incubator/opentracing-sqs-java.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'jmhofer'
                        name 'Joachim Hofer'
                        email 'joachim.hofer@zalando.de'
                        organization 'Zalando SE'
                        organizationUrl 'https://tech.zalando.com/'
                    }
                }
            }
        }
    }
}
